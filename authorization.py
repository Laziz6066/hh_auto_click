import time
import json
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from config import service, user_agent, database_url, MAX_APPLICATIONS
from dotenv import load_dotenv
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from responses import apply_to_vacancies


load_dotenv()

COOKIES_FILE = "hh_cookies.json"
LOGIN_URL = "https://hh.ru/account/login"
BASE_URL = "https://hh.ru/"

options = webdriver.ChromeOptions()
options.add_argument('--disable-blink-features=AutomationControlled')
options.add_argument(user_agent)

driver = webdriver.Chrome(service=service, options=options)

engine = create_engine(database_url)
Session = sessionmaker(bind=engine)
session = Session()


def save_cookies():
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç cookies –≤ —Ñ–∞–π–ª –ø–æ—Å–ª–µ —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."""
    input("1. –í–æ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –±—Ä–∞—É–∑–µ—Ä–µ –∏ –Ω–∞–∂–º–∏—Ç–µ Enter –≤ —ç—Ç–æ–º –æ–∫–Ω–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞...")
    cookies = driver.get_cookies()
    with open(COOKIES_FILE, 'w') as f:
        json.dump(cookies, f)
    print("‚úÖ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª!")


def load_cookies():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç cookies –∏–∑ —Ñ–∞–π–ª–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Ö –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å."""
    if not os.path.exists(COOKIES_FILE):
        return False

    driver.get(BASE_URL)
    time.sleep(2)

    with open(COOKIES_FILE, 'r') as f:
        cookies = json.load(f)

    for cookie in cookies:
        cookie.pop('sameSite', None)
        driver.add_cookie(cookie)

    print("üîπ Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
    driver.refresh()
    time.sleep(3)

    try:
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, '[data-qa="mainmenu_myResumes"]')))
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ cookies —É—Å–ø–µ—à–Ω–∞!")
        return True
    except:
        print("‚ùå Cookies –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.")
        os.remove(COOKIES_FILE)
        return False


def auth_with_cookies():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ cookies –∏–ª–∏ —Ä—É—á–Ω–æ–π –≤—Ö–æ–¥."""
    if load_cookies():
        return True

    print("üîπ –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—Ö–æ–¥–∞...")
    driver.get(LOGIN_URL)
    save_cookies()
    return True


def main():
    if not auth_with_cookies():
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ó–∞–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä.")
        driver.quit()
        return

    print("–ì–æ—Ç–æ–≤–æ! –°–∫—Ä–∏–ø—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º.")
    apply_to_vacancies(driver, session, MAX_APPLICATIONS)
    time.sleep(10)
    driver.quit()


if __name__ == "__main__":
    main()